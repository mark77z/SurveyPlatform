{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/survey-mngmt/auth/auth.component.ts","./src/app/survey-mngmt/auth/auth.component.html","./src/app/partials/header/header.component.ts","./src/app/partials/header/header.component.html","./src/app/survey-mngmt/create/create.component.ts","./src/app/survey-mngmt/create/create.component.html","./src/app/survey-mngmt/survey-mngmt.component.ts","./src/app/survey-mngmt/list/list.component.html","./src/environments/environment.ts","./src/app/partials/footer/footer.component.ts","./src/app/partials/footer/footer.component.html","./src/app/survey-mngmt/survey-mngmt.module.ts","./src/app/model/model.module.ts","./src/app/model/rest.datasource.ts","./src/app/model/user.repository.ts","./src/app/partials/base-page/base-page.component.ts","./src/app/partials/base-page/base-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/user.model.ts","./src/app/survey-mngmt/list/list.component.ts","./src/app/app.module.ts","./src/app/guards/storeFirstGuard.guard.ts","./src/app/survey-mngmt/auth/auth.guard.ts","./src/app/model/static.datasource.ts","./src/app/pages/pages.module.ts","./src/app/survey-mngmt/register/register.component.ts","./src/app/survey-mngmt/register/register.component.html","./src/app/model/auth.service.ts","./src/app/survey-mngmt/update/update.component.ts","./src/app/survey-mngmt/update/update.component.html","./src/app/partials/partials.module.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/survey-mngmt/available/available.component.ts","./src/app/survey-mngmt/available/available.component.html","./src/app/model/survey.repository.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent extends BasePageComponent implements OnInit {\n\n  constructor(route: ActivatedRoute) {\n    super(route);\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-base-page></app-base-page>\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../model/auth.service';\r\n\r\nimport { User } from '../../model/user.model';\r\n\r\n@Component({\r\n  templateUrl: './auth.component.html'\r\n})\r\nexport class AuthComponent implements OnInit\r\n{\r\n  public user: User;\r\n  public errorMessage: string;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  authenticate(form: NgForm): void\r\n  {\r\n    if (form.valid)\r\n    {\r\n      // perform authentication\r\n      this.auth.authenticate(this.user).subscribe(data => {\r\n        if (data.success)\r\n        {\r\n          this.auth.storeUserData(data.token, data.user);\r\n          this.router.navigateByUrl('surveys/list');\r\n        }else{\r\n          this.errorMessage = 'Incorrect username or password.';\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.errorMessage = 'Username and password are required';\r\n    }\r\n  }\r\n\r\n}\r\n","  <main class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\r\n        <div class=\"bg-danger mt-2 p-2 text-center text-white\"\r\n          *ngIf='errorMessage != null'>\r\n          {{ errorMessage }}\r\n        </div>\r\n        <h1>Please Login</h1>\r\n        <form autocomplete='off' #form='ngForm' (ngSubmit)='authenticate(form)'>\r\n  \r\n        <fieldset class=\"form-group\">\r\n          <label for=\"username\">Username:</label>\r\n          <input type=\"text\" class=\"form-control\"\r\n          [(ngModel)]='user.username'\r\n          name='username' placeholder='Enter Username'\r\n          id='username' required autofocus autocomplete='off'>\r\n        </fieldset>\r\n  \r\n        <fieldset class=\"form-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" class=\"form-control\"\r\n          [(ngModel)]='user.password'\r\n          name='password' placeholder='Enter Password'\r\n          id='password' required autocomplete='off'>\r\n        </fieldset>\r\n  \r\n        <fieldset class=\"form-group text-right\">\r\n          <button class='btn btn-primary m-1' type='submit'>\r\n            <i class=\"fas fa-sign-in-alt\"></i>\r\n            Sign In\r\n          </button>\r\n          <button class='btn btn-success m-1' routerLink='/register'>\r\n            <i class=\"fas fa-user-plus\"></i>\r\n            Sign up\r\n          </button>\r\n          <button class='btn btn-secondary m-1' routerLink='/home'>\r\n            <i class=\"fas fa-undo\"></i>\r\n            Cancel\r\n          </button>\r\n        </fieldset>\r\n      </form>\r\n      </div>\r\n    </div>\r\n  </main>\r\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/model/auth.service';\nimport { User } from 'src/app/model/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: User;\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void\n  {\n    this.user = new User();\n  }\n\n  onLogoutClick(): void\n  {\n    this.authService.logout().subscribe(data => {\n      this.router.navigate(['/login']);\n    });\n  }\n\n\n  isLoggedIn(): boolean\n  {\n    const result = this.authService.authenticated;\n    if (result)\n    {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n    return result;\n  }\n\n}\n","<!-- Main Navigation -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"/\"><img src=\"../../../assets/images/logo.png\" alt=\"\" width=\"70\" height=\"70\"></a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/home\"><i class=\"fas fa-lg fa-home\"></i> Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/about\"><i class=\"fas fa-info-circle\"></i> About </a>\n      </li>\n      <li class=\"nav-item\" *ngIf='!isLoggedIn()'>\n        <a class=\"nav-link\" href=\"/surveys/available\"><i class=\"fas fa-poll-h\"></i> Available Surveys </a>\n      </li>\n      <li class=\"nav-item\" *ngIf='isLoggedIn()'>\n        <a class=\"nav-link\" href=\"/surveys/list\"><i class=\"fas fa-poll-h\"></i> Surveys </a>\n      </li>\n      <li *ngIf='isLoggedIn()'\n            class=\"navbar-text text-success ml-5 mr-5 d-none d-lg-inline\">\n            <i class=\"fas fa-lg fa-user\"></i> Welcome, {{ user.username }}\n        </li>\n      <li *ngIf='isLoggedIn()' class=\"nav-item\">\n        <a (click)='onLogoutClick()' routerLink='/logout' class=\"nav-link\" href=\"/login\">\n          <i class=\"fas fa-lg fa-sign-out-alt\"></i> Logout </a>\n      </li>\n      <li *ngIf='!isLoggedIn()' class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\"><i class=\"fas fa-lg fa-sign-in-alt\"></i> Login </a>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Component } from '@angular/core';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms'\nimport { User } from 'src/app/model/user.model';\nimport { AuthService } from 'src/app/model/auth.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n  submitted = false;\n  createdSurvey = false;\n  surveyForm: FormGroup;\n  user: User;\n\n  constructor(private fb:FormBuilder, private router: Router, private repository: SurveyRepository, private authService: AuthService)\n  { \n    const result = this.authService.authenticated;\n    if (result)\n    {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n\n    this.surveyForm = this.fb.group({\n      userId: this.user.username,\n      title: '',\n      expiration_dte: new Date(),\n      questions: this.fb.array([])\n    });\n  }\n\n  questions() : FormArray\n  {\n    return this.surveyForm.get(\"questions\") as FormArray\n  }\n\n  answers(qIndex: number) : FormArray\n  {\n    return this.questions().at(qIndex).get(\"answers\") as FormArray\n  }\n\n  newAnswerToQuestion(): FormGroup\n  {\n    return this.fb.group({\n      text: '',\n      isCorrect: false,\n    })\n  }\n\n  addAnswerToQuestion(qIndex:number)\n  {\n    this.answers(qIndex).push(this.newAnswerToQuestion());\n  }\n\n  newQuestion(): FormGroup\n  {\n    return this.fb.group({\n      type: '',\n      text: '',\n      answers: this.fb.array([])\n    })\n  }\n\n  addQuestion()\n  {\n    this.questions().push(this.newQuestion());\n  }\n\n  surveyList(): void\n  {\n    this.router.navigateByUrl('/surveys/list');\n  }\n\n  onSubmit(): void\n  {\n    console.log(this.surveyForm.value);\n    this.repository.createSurvey(this.surveyForm.value).subscribe(survey => {\n      alert('Quiz created successfully');\n      this.router.navigate(['/surveys/list'])\n      .then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n","<div class=\"container \">\n    <div class=\"surveyFormContainer\">\n        <div class=\"col-md-offset-3 col-md-10\">\n            <h1 class=\"display-4\">Survey Creation</h1>\n        </div>\n            <div *ngIf='createdSurvey' class=\"m-2 text-center\">\n              <h2>Survey Created!</h2>\n              <button class=\"btn btn-primary\" (click)='availableSurveys()'>Return to Surveys</button>\n            </div>\n        <form class=\"surveyForm\" novalidate class=\"m-2\" (ngSubmit)='onSubmit()' [formGroup]=\"surveyForm\">\n            <div class=\"form-group\">\n                <label for=\"title\">Title</label>\n                <input class=\"form-control\" name='title' formControlName=\"title\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"Expiration Date\">Expiration Date</label>\n                <input class=\"form-control\" type=\"datetime-local\" name=\"expiration_dte\" formControlName=\"expiration_dte\" required>\n            </div>\n            <table class=\"table\" formArrayName=\"questions\">\n                <tr>\n                  <th colspan=\"2\">Questions:</th>\n                  <th width=\"150px\">\n                      <button type=\"button\" class=\"btn btn-success m-1\" (click)='addQuestion()'>Add Question</button>\n                    </th>\n                </tr>\n                <tr *ngFor=\"let question of questions().controls; let qIndex=index\" [formGroupName]=\"qIndex\">\n                  <td>\n                      Text :\n                      <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                  </td>\n                  <td>\n                      Type:\n                      <select class=\"form-control\" formControlName=\"type\" name=\"type\">\n                        <option selected value=\"MCQ\">Multiple Choise Question</option>\n                        <option value=\"TRUEFALSE\">True/False</option>\n                        <option value=\"SHORTANSWER\">Short Answer</option>\n                      </select>\n                  </td>\n                  <td>\n                    <br><button type=\"button\" class=\"btn btn-dark m-1\" (click)='addAnswerToQuestion(qIndex)'>Add Answer</button>\n                  </td>\n                  <td>\n                    <div formArrayName=\"answers\">\n                        <div *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\n                            <div [formGroupName]=\"aIndex\">\n                                Answer :\n                                <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                                <div class=\"form-check form-switch\">\n                                    <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isCorrect\">\n                                    <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Is Answer correct?</label>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                  </td>\n                </tr>\n              </table>\n            <div class=\"text-left\">\n              <button class=\"btn btn-secondary m-1\" (click)='surveyList()'>Back</button>\n              <button class=\"btn btn-primary m-1\" type=\"submit\">Create Survey</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-survey-mngmt',\r\n  templateUrl: './list/list.component.html'\r\n})\r\nexport class SurveyMngmtComponent {\r\n\r\n  constructor(private auth: AuthService,\r\n    private router: Router) {}\r\n\r\n  logout(): void\r\n  {\r\n  this.auth.logout();\r\n\r\n  this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<div class=\"container availableListContainer\">\n    <div class=\"row\">\n        <div class=\"col-md-offset-3 col-md-10\">\n            <h1 class=\"display-4\">Surveys</h1>\n            <a href='/surveys/create' class=\"btn btn-primary\" role=\"button\">\n            <i class=\"fas fa-plus-circle\"></i> Create Survey</a>\n            <!-- Surveys -->\n            <div class=\"col-10 p-2\">\n                <div *ngFor='let survey of surveys' class=\"card m-1 p-1 bg-light\">\n                    <h4>\n                    {{ survey.title }}\n                    <span class=\"badge badge-pill badge-secondary float-right\">\n                        Creator: <span class=\"badge badge-light\">{{ survey.userId }}</span>\n                    </span>\n                    </h4>\n                    <div class=\"card-text bg-white p-1\">\n                        <span class=\"col-2\"><b>#Questions:</b> {{survey.questions.length}}</span>\n                        <b>Expires on: </b>{{ survey.expiration_dte | date:'yyyy-MM-dd hh:mm a'}}\n                        <button class=\"btn btn-warning btn-sm float-right\" (click)='updateQuiz(survey._id)'>\n                            Edit Survey\n                        </button>\n                        <button class=\"btn btn-danger btn-sm float-right\" (click)='removeQuiz(survey._id)'>\n                            Delete Survey\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Bottom Nav -->\n<footer>\n  <nav class=\"navbar fixed-bottom navbar-dark bg-dark\">\n    <h6 class=\"display-6 navbar-text\">&copy; Copyright 2020. All Rights reserved.</h6>\n  </nav>\n</footer>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModelModule } from '../model/model.module';\nimport { ListComponent } from './list/list.component';\nimport { CreateComponent } from './create/create.component';\nimport { UpdateComponent } from './update/update.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AvailableComponent } from './available/available.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ListComponent, CreateComponent, UpdateComponent, AvailableComponent, AuthComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    FormsModule,\n    ModelModule,\n    ReactiveFormsModule\n  ],\n  providers: [AuthGuard],\n})\nexport class SurveyMngmtModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { StaticDataSource } from './static.datasource';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SurveyRepository} from './survey.repository';\r\n\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  providers: [SurveyRepository, \r\n  {provide: StaticDataSource, useClass: RestDataSource},\r\n  RestDataSource]\r\n})\r\nexport class ModelModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Survey } from './survey.model';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from './user.model';\r\n\r\nconst PROTOCOL = 'http';\r\nconst PORT = 3500;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestDataSource\r\n{\r\n  private user: User;\r\n  private baseUrl: string;\r\n  private authToken: string;\r\n\r\n  private httpOptions =\r\n  {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient, private jwtService: JwtHelperService)\r\n  {\r\n    //this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/api/`;\r\n    this.baseUrl = `https://survey-platform-comp229.herokuapp.com/api/`\r\n  }\r\n\r\n  getSurveys(): Observable<Survey[]>\r\n  {\r\n    return this.http.get<Survey[]>(this.baseUrl + 'surveys/list');\r\n  }\r\n\r\n  createSurvey(survey: Survey): Observable<Survey>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<Survey>(this.baseUrl + 'surveys/create', survey, this.httpOptions);\r\n  }\r\n\r\n  getSurveyById(id: string): Observable<Survey>\r\n  {\r\n    return this.http.get<Survey>(this.baseUrl + 'surveys/get/' + id);\r\n  }\r\n\r\n  updateSurvey(id: string, survey: Survey): Observable<Survey>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<Survey>(this.baseUrl + 'surveys/update/' + id, survey, this.httpOptions);\r\n  }\r\n\r\n  deleteSurvey(id: string)\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<Survey>(this.baseUrl + 'surveys/delete/' + id, this.httpOptions);\r\n  }\r\n\r\n  storeUserData(token: any, user: User): void\r\n  {\r\n    localStorage.setItem('id_token', 'Bearer ' + token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  registerUser(user: User): Observable<any>\r\n  {\r\n    return this.http.post<User>(this.baseUrl + 'register', user, this.httpOptions);\r\n  }\r\n\r\n  authenticate(user: User): Observable<any>\r\n  {\r\n    return this.http.post<any>(this.baseUrl + 'login', user, this.httpOptions);\r\n  }\r\n  \r\n  logout(): Observable<any>\r\n  {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n\r\n    return this.http.get<any>(this.baseUrl + 'logout', this.httpOptions);\r\n  }\r\n\r\n  loggedIn(): boolean\r\n  {\r\n    return !this.jwtService.isTokenExpired(this.authToken);\r\n  }\r\n\r\n  private loadToken(): void\r\n  {\r\n    const token = localStorage.getItem('id_token');\r\n    if(token){\r\n      this.authToken = token;\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization', this.authToken);\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserRepository\r\n{\r\n  private users: User[] = [];\r\n\r\n  constructor(private dataSource: RestDataSource)\r\n  {\r\n    //TODO\r\n  }\r\n\r\n  registerUser(user: User): Observable<any>\r\n  {\r\n    return this.dataSource.registerUser(user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-base-page',\n  templateUrl: './base-page.component.html',\n  styleUrls: ['./base-page.component.css']\n})\nexport class BasePageComponent implements OnInit {\n  title: string;\n\n  constructor(private route: ActivatedRoute){  }\n\n  ngOnInit(): void {\n    this.title = this.route.snapshot.data.title;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"jumbotron\">\n    <h1 class=\"display-4\">Welcome to {{ title }}</h1>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BookStore';\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>\n","export class User\r\n{\r\n  username: string;\r\n  password: string;\r\n  email: string;\r\n  name: string;\r\n  address: string;\r\n  phone: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { AuthService } from 'src/app/model/auth.service';\nimport { Survey } from '../../model/survey.model';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/model/user.model';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent{\n  constructor(private router: Router, private repository: SurveyRepository, private authService: AuthService) { }\n\n  user: User;\n\n  get surveys(): Survey[]\n  {\n    const result = this.authService.authenticated;\n    if (result)\n    {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n\n    return this.repository.getSurveysByUserName(this.user.username);\n  } \n  \n  updateQuiz(surveyId: string): void\n  {\n    this.router.navigate(['/surveys/update/', surveyId]);\n  }\n\n  removeQuiz(surveyId: string): void\n  {\n    if(confirm(\"Are you sure to delete the survey?\"))\n    {\n      this.repository.removeSurvey(surveyId)\n    .subscribe(\n      response => {\n        window.location.reload();\n      },\n      error => {\n        console.log(error);\n      });    \n    }\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { RouterModule } from '@angular/router';\nimport { SurveyMngmtModule } from './survey-mngmt/survey-mngmt.module';\nimport { JwtModule, JwtHelperService, JwtInterceptor } from '@auth0/angular-jwt';\n\nexport function jwtTokenGetter(): string\n{\n  return localStorage.getItem('id_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule,\n    PagesModule,\n    SurveyMngmtModule,\n\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { SurveyMngmtComponent } from '../survey-mngmt/survey-mngmt.component';\r\n\r\n\r\n@Injectable()\r\nexport class StoreFirstGuard\r\n{\r\n  private firstNavigation = true;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.firstNavigation)\r\n    {\r\n      this.firstNavigation = false;\r\n      if (route.component !== SurveyMngmtComponent)\r\n      {\r\n        this.router.navigateByUrl('/');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n{\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.auth.authenticated)\r\n    {\r\n      console.log('authenticated');\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      console.log('cannot authenticate');\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Survey } from './survey.model';\r\nimport { Observable, from } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class StaticDataSource\r\n{\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PartialsModule } from '../partials/partials.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, FormsModule, PartialsModule],\r\n  declarations: [\r\n    AboutComponent,\r\n    HomeComponent\r\n  ],\r\n  exports: [\r\n    AboutComponent,\r\n    HomeComponent,\r\n    PartialsModule]\r\n})\r\nexport class PagesModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserRepository } from '../../model/user.repository';\r\nimport { User } from '../../model/user.model';\r\nimport { AuthService } from '../../model/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent implements OnInit\r\n{\r\n  public user: User;\r\n  public errorMessage: string;\r\n\r\n  constructor(private router: Router, private repository: UserRepository, private auth: AuthService ) { }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  register(form: NgForm): void\r\n  {\r\n    if (form.valid)\r\n    {\r\n      this.repository.registerUser(this.user).subscribe(data => {\r\n        if (data.success){\r\n          this.auth.storeUserData(data.token, data.user);\r\n          this.router.navigateByUrl('surveys/list');\r\n        }else{\r\n          this.errorMessage = 'Error registering user.';\r\n          console.log(data.error);\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.errorMessage = 'Form Data Invalid';\r\n    }\r\n  }\r\n}\r\n","<main class=\"container register-form\">\r\n    <div class=\"row\">\r\n        <div class=\"offset-md-4 col-md-4\">\r\n            <div class=\"section-title\">\r\n                <h2>Create your account</h2>\r\n            </div>\r\n            <div class=\"bg-danger mt-2 p-2 text-center text-white\"\r\n                *ngIf='errorMessage != null'>\r\n                {{ errorMessage }}\r\n            </div>\r\n            <form autocomplete='off' #form='ngForm' (ngSubmit)='register(form)'>\r\n                <fieldset class=\"form-group\">\r\n                    <label for=\"username\">Username: </label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                    name=\"username\"\r\n                    [(ngModel)]='user.username'\r\n                    placeholder=\"Enter username\"\r\n                    id=\"username\" required autofocus>\r\n                </fieldset>\r\n    \r\n                <fieldset class=\"form-group\">\r\n                    <label for=\"password\">Password: </label>\r\n                    <input type=\"password\" class=\"form-control\"\r\n                    name=\"password\"\r\n                    [(ngModel)]='user.password'\r\n                    placeholder=\"Enter password\"\r\n                    id=\"password\" required>\r\n                </fieldset>\r\n    \r\n                <fieldset class=\"form-group\">\r\n                    <label for=\"name\">Name: </label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                    name=\"name\"\r\n                    [(ngModel)]='user.name'\r\n                    placeholder=\"Enter Name\"\r\n                    id=\"name\" required>\r\n                </fieldset>\r\n    \r\n                <fieldset class=\"form-group\">\r\n                    <label for=\"email\">Email: </label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                    name=\"email\"\r\n                    [(ngModel)]='user.email'\r\n                    placeholder=\"Enter Email Address\"\r\n                    id=\"email\" required>\r\n                </fieldset>\r\n    \r\n                <fieldset class=\"form-group\">\r\n                    <label for=\"phone\">Phone number: </label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                    name=\"phone\"\r\n                    [(ngModel)]='user.phone'\r\n                    placeholder=\"Enter Phone Number\"\r\n                    id=\"phone\" required>\r\n                </fieldset>\r\n    \r\n                <fieldset class=\"form-group\">\r\n                    <label for=\"address\">Address: </label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                    name=\"address\"\r\n                    [(ngModel)]='user.address'\r\n                    placeholder=\"Enter Address\"\r\n                    id=\"address\" required>\r\n                </fieldset>\r\n    \r\n                <fieldset class=\"form-group text-right\">\r\n                    <button class='btn btn-primary m-1' type='submit'>\r\n                      <i class=\"fas fa-sign-in-alt\"></i>\r\n                      Sign Up\r\n                    </button>\r\n                    <button class='btn btn-secondary m-1' routerLink='/home'>\r\n                      <i class=\"fas fa-undo\"></i>\r\n                      Cancel\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</main>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService\r\n{\r\n  user: User;\r\n\r\n  constructor(private datasource: RestDataSource)\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  authenticate(user: User): Observable<any>\r\n  {\r\n    return this.datasource.authenticate(user);\r\n  }\r\n\r\n  storeUserData(token: any, user: User): void\r\n  {\r\n    this.datasource.storeUserData(token, user);\r\n  }\r\n\r\n  get authenticated(): boolean\r\n  {\r\n    return this.datasource.loggedIn();\r\n  }\r\n\r\n  logout(): Observable<any>\r\n  {\r\n    return this.datasource.logout();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { Survey } from 'src/app/model/survey.model';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms'\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  surveyId: string;\n  public surveyToEdit: Survey;\n  private sub: any;\n  surveyEditForm: FormGroup;\n\n  constructor(private router: Router, private fb:FormBuilder, private route: ActivatedRoute, private repository: SurveyRepository)\n  {\n    this.sub = this.route.params.subscribe(params => {\n      this.surveyId = params['surveyId'];\n      this.surveyToEdit = this.repository.getSurvey(this.surveyId);\n    });\n\n    this.surveyEditForm = this.fb.group({\n      title: this.surveyToEdit.title,\n      expiration_dte: new FormControl(new Date(this.surveyToEdit.expiration_dte).toISOString().slice(0, -1)),\n      questions: this.fb.array([])\n    });\n\n    let questionsControl = <FormArray>this.surveyEditForm.controls.questions;\n    this.surveyToEdit.questions.forEach(question => {\n      questionsControl.push(this.fb.group({\n          text: question.text,\n          type: question.type,\n          answers: this.setAnswers(question.answers)\n      }))\n    });\n  }\n\n  questions() : FormArray\n  {\n    return this.surveyEditForm.get(\"questions\") as FormArray\n  }\n\n  answers(qIndex: number) : FormArray\n  {\n    return this.questions().at(qIndex).get(\"answers\") as FormArray\n  }\n\n  setAnswers(data){\n    let answersArr = new FormArray([])\n    data.forEach(a => {\n      answersArr.push(this.fb.group({ \n        text: a.text,\n        isCorrect: a.isCorrect \n      }))\n    })\n    return answersArr;\n  }\n\n  ngOnInit(): void {}\n  \n  surveyList(): void\n  {\n    this.router.navigateByUrl('/surveys/list');\n  }\n\n  onSubmit(): void\n  {\n    console.log(this.surveyEditForm.value);\n    this.repository.updateSurvey(this.surveyId, this.surveyEditForm.value).subscribe(survey => {\n      alert('Quiz edited successfully');\n      this.router.navigate(['/surveys/list'])\n      .then(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n}\n","<div class=\"container \">\n    <div class=\"surveyEditFormContainer\" *ngIf=\"surveyToEdit\">\n        <div class=\"col-md-offset-3 col-md-10\">\n            <h1 class=\"display-4\">Edit Survey</h1>\n        </div>\n        <form class=\"surveyEditForm\" novalidate class=\"m-2\" (ngSubmit)='onSubmit()' [formGroup]=\"surveyEditForm\">\n            <div class=\"form-group\">\n                <label for=\"title\">Title</label>\n                <input class=\"form-control\" name='title' formControlName=\"title\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"Expiration Date\">Expiration Date</label>\n                <input class=\"form-control\" type=\"datetime-local\" name=\"expiration_dte\" formControlName=\"expiration_dte\" required>\n            </div>\n            <table class=\"table\" formArrayName=\"questions\">\n                <tr>\n                    <th colspan=\"2\">Questions: </th>\n                </tr>\n                <tr *ngFor=\"let question of questions().controls; let qIndex=index\" [formGroupName]=\"qIndex\">\n                    <td>\n                        Text :\n                        <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                    </td>\n                    <td>\n                        Type:\n                        <input type=\"text\" formControlName=\"type\" class=\"form-control\" disabled>\n                    </td>\n                    <td>\n                        <div formArrayName=\"answers\">\n                            <div *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\n                                <div [formGroupName]=\"aIndex\">\n                                    Answer :\n                                    <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                                    <div class=\"form-check form-switch\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isCorrect\">\n                                        <label class=\"form-check-label\" for=\"isCorrect\">Is Answer correct?</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <div class=\"text-left\">\n                <button class=\"btn btn-secondary m-1\" (click)='surveyList()'>Back</button>\n                <button class=\"btn btn-primary m-1\" type=\"submit\">Update Survey</button>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BasePageComponent } from './base-page/base-page.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, FormsModule, RouterModule],\r\n  declarations: [\r\n    BasePageComponent,\r\n    FooterComponent,\r\n    HeaderComponent\r\n  ],\r\n  exports: [\r\n    BasePageComponent,\r\n    FooterComponent,\r\n    HeaderComponent\r\n    ]\r\n})\r\nexport class PartialsModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent extends BasePageComponent implements OnInit {\n\n  constructor(route: ActivatedRoute) {\n    super(route);\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-base-page></app-base-page>\n","import { Component, OnInit } from '@angular/core';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { Survey } from '../../model/survey.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-available',\n  templateUrl: './available.component.html',\n  styleUrls: ['./available.component.css']\n})\nexport class AvailableComponent {\n\n  constructor(private router: Router, private repository: SurveyRepository) { }\n\n  get surveys(): Survey[]\n  {\n    return this.repository.getSurveys();\n  } \n  \n  get availableSurveys(): Survey[]\n  {\n    return this.repository.getAvailableSurveys();\n  }\n\n  updateQuiz(surveyId: string): void\n  {\n    this.router.navigate(['/surveys/update/', surveyId]);\n  }\n\n  removeQuiz(surveyId: string): void\n  {\n    if(confirm(\"Are you sure to delete the survey?\"))\n    {\n      this.repository.removeSurvey(surveyId)\n    .subscribe(\n      response => {\n        window.location.reload();\n      },\n      error => {\n        console.log(error);\n      });    \n    }\n  }\n}\n","<div class=\"container availableListContainer\">\n    <div class=\"row\">\n        <div class=\"col-md-offset-3 col-md-10\">\n            <h1 class=\"display-4\">Available Surveys</h1>\n            <!-- Surveys -->\n            <div class=\"col-10 p-2\">\n                <div *ngFor='let survey of availableSurveys' class=\"card m-1 p-1 bg-light\">\n                    <h4>\n                    {{ survey.title }}\n                    <span class=\"badge badge-pill badge-secondary float-right\">\n                        Creator: <span class=\"badge badge-light\">{{ survey.userId }}</span>\n                    </span>\n                    </h4>\n                    <div class=\"card-text bg-white p-1\">\n                        <span class=\"col-2\"><b>#Questions:</b> {{survey.questions.length}}</span>\n                        <b>Expires on: </b>{{ survey.expiration_dte | date:'yyyy-MM-dd hh:mm a'}}\n                        <button class=\"btn btn-success btn-sm float-right\">\n                            Start Survey\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Survey } from './survey.model';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyRepository\r\n{\r\n  private surveys: Survey[] = [];\r\n\r\n  constructor(private dataSource: RestDataSource)\r\n  {\r\n    dataSource.getSurveys().subscribe(data => {\r\n      this.surveys = data;\r\n    });\r\n  }\r\n\r\n  getSurveys(): Survey[]\r\n  {\r\n    return this.surveys;\r\n  }\r\n\r\n  getSurvey(id: string): Survey\r\n  {\r\n    return this.surveys.find(s => s._id === id);\r\n  }\r\n\r\n  getAvailableSurveys(): Survey[]\r\n  {\r\n    const currentDate  = new Date();\r\n    return this.surveys.filter(s => new Date(s.expiration_dte) >= currentDate);\r\n  }\r\n\r\n  getSurveysByUserName(username: string): Survey[]\r\n  {\r\n    return this.surveys.filter(s => s.userId === username);\r\n  }\r\n\r\n  createSurvey(survey: Survey): Observable<Survey>\r\n  {\r\n    return this.dataSource.createSurvey(survey);\r\n  }\r\n\r\n  updateSurvey(id: string, survey: Survey): Observable<Survey>\r\n  {\r\n    return this.dataSource.updateSurvey(id, survey);\r\n  }\r\n\r\n  removeSurvey(id: string): Observable<Survey>\r\n  {\r\n    return this.dataSource.deleteSurvey(id);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { AvailableComponent } from './survey-mngmt/available/available.component';\nimport { CreateComponent } from './survey-mngmt/create/create.component';\nimport { ListComponent } from './survey-mngmt/list/list.component';\nimport { UpdateComponent } from './survey-mngmt/update/update.component';\nimport { RegisterComponent } from './survey-mngmt/register/register.component';\nimport { AuthComponent } from './survey-mngmt/auth/auth.component';\nimport { StoreFirstGuard } from './guards/storeFirstGuard.guard';\nimport { AuthGuard } from './survey-mngmt/auth/auth.guard';\n\nconst routes: Routes = [\n {path: 'home', component: HomeComponent, data: {title: 'Survey Builder'}},\n {path: 'about', component: AboutComponent, data: {title: 'About'}},\n { path: 'surveys/available', component: AvailableComponent },\n { path: 'surveys/list', component: ListComponent,canActivate: [AuthGuard] },\n { path: 'surveys/create', component: CreateComponent,canActivate: [AuthGuard] },\n { path: 'surveys/update/:surveyId', component: UpdateComponent,canActivate: [AuthGuard] },\n { path: 'login', component: AuthComponent },\n { path: 'register', component: RegisterComponent },\n {path: '', redirectTo: '/home', pathMatch: 'full'},\n {path: '**', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule],\n  providers: [StoreFirstGuard ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}