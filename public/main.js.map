{"version":3,"sources":["./src/app/survey-mngmt/respond/respond.component.ts","./src/app/survey-mngmt/respond/respond.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/survey-mngmt/auth/auth.component.ts","./src/app/survey-mngmt/auth/auth.component.html","./src/app/partials/header/header.component.ts","./src/app/partials/header/header.component.html","./src/app/survey-mngmt/create/create.component.ts","./src/app/survey-mngmt/create/create.component.html","./src/app/survey-mngmt/account/account.component.ts","./src/app/survey-mngmt/account/account.component.html","./src/app/survey-mngmt/survey-mngmt.component.ts","./src/app/survey-mngmt/list/list.component.html","./src/environments/environment.ts","./src/app/partials/footer/footer.component.ts","./src/app/partials/footer/footer.component.html","./src/app/survey-mngmt/survey-mngmt.module.ts","./src/app/model/model.module.ts","./src/app/model/rest.datasource.ts","./src/app/model/user.repository.ts","./src/app/partials/base-page/base-page.component.ts","./src/app/partials/base-page/base-page.component.html","./src/app/survey-mngmt/stats/stats.component.ts","./src/app/survey-mngmt/stats/stats.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/model/user.model.ts","./src/app/survey-mngmt/list/list.component.ts","./src/app/app.module.ts","./src/app/guards/storeFirstGuard.guard.ts","./src/app/survey-mngmt/auth/auth.guard.ts","./src/app/model/static.datasource.ts","./src/app/pages/pages.module.ts","./src/app/survey-mngmt/register/register.component.ts","./src/app/survey-mngmt/register/register.component.html","./src/app/model/auth.service.ts","./src/app/survey-mngmt/update/update.component.ts","./src/app/survey-mngmt/update/update.component.html","./src/app/partials/partials.module.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/survey-mngmt/available/available.component.ts","./src/app/survey-mngmt/available/available.component.html","./src/app/model/survey.repository.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SurveyRepository } from '../../model/survey.repository';\r\nimport { Survey } from '../../model/survey.model';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms'\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n    selector: 'respond',\r\n    templateUrl: './respond.component.html',\r\n    styleUrls: ['./respond.component.css']\r\n})\r\nexport class RespondComponent implements OnInit {\r\n    public surveyId: string;\r\n    private sub: any;\r\n    public survey: Survey;\r\n    surveyForm: FormGroup;\r\n    ckTrue: HTMLInputElement;\r\n    ckFalse: HTMLInputElement;\r\n\r\n    constructor(private router: Router,\r\n        private repository: SurveyRepository,\r\n        private route: ActivatedRoute,\r\n        private fb: FormBuilder) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.surveyId = params['surveyId'];\r\n            this.surveyForm = this.fb.group({\r\n                surveyId: this.surveyId,\r\n                gender: new FormControl(),\r\n                age: ['', Validators.required],\r\n                questions: this.fb.array([])\r\n            });\r\n            this.repository.getSurveyById(this.surveyId).subscribe(survey => {\r\n                this.survey = survey;\r\n                let questionsControl = <FormArray>this.surveyForm.controls.questions;\r\n                survey.questions.forEach(question => {\r\n                    questionsControl.push(this.fb.group({\r\n                        _id: question._id,\r\n                        text: question.text,\r\n                        type: question.type,\r\n                        answers: this.setAnswers(question.answers)\r\n                    }))\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    questions(): FormArray {\r\n        return this.surveyForm.get(\"questions\") as FormArray\r\n    }\r\n\r\n    answers(qIndex: number): FormArray {\r\n        return this.questions().at(qIndex).get(\"answers\") as FormArray\r\n    }\r\n\r\n    setAnswers(data) {\r\n        let answersArr = new FormArray([])\r\n        data.forEach(a => {\r\n            answersArr.push(this.fb.group({\r\n                text: a.text,\r\n                ans: ['', Validators.required],\r\n                _id: a._id\r\n            }))\r\n        })\r\n        return answersArr;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        console.log(this.surveyForm.value);\r\n        this.repository.answerSurvey(this.surveyForm.value, this.surveyId).subscribe(data => {\r\n            if (data.success) {\r\n                this.router.navigateByUrl('surveys/available');\r\n                console.log(data);\r\n                Swal.fire(\r\n                    'Answers saved successfully',\r\n                    'Correct Answers: ' + data.correctAnswers + '/' + data.totalQuestions,\r\n                    'success'\r\n                );\r\n            }\r\n            else {\r\n                Swal.fire(\r\n                    'Error saving answers',\r\n                    'An error ocurred. Please try again later.',\r\n                    'error'\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    onCkTrueFalseChange(e, qIndex, aIndex) {\r\n        this.ckTrue = document.getElementById('ck' + qIndex + '0') as HTMLInputElement;\r\n        this.ckFalse = document.getElementById('ck' + qIndex + '1') as HTMLInputElement;\r\n        \r\n        var checkComponent = e.target.id as string;\r\n\r\n        if(checkComponent.charAt(checkComponent.length - 1) === '0'){\r\n            if(this.ckTrue.checked)\r\n                this.ckFalse.checked = false;\r\n                var cmp = ((((this.surveyForm.controls.questions as FormArray).controls[qIndex] as FormGroup).controls.answers as FormArray).controls[1] as FormGroup).controls;\r\n                cmp.ans.setValue('');\r\n        }\r\n        else if(checkComponent.charAt(checkComponent.length - 1) === '1'){\r\n            if(this.ckFalse.checked)\r\n                this.ckTrue.checked = false;\r\n                var cmp = ((((this.surveyForm.controls.questions as FormArray).controls[qIndex] as FormGroup).controls.answers as FormArray).controls[0] as FormGroup).controls;\r\n                cmp.ans.setValue('');\r\n        }\r\n    }\r\n}\r\n","<div class=\"container survey-container\">\r\n    <div class=\"page-header\">\r\n        <div class=\"section-title\">\r\n            <h1 class=\"display-4\">{{ survey.title }}</h1>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"container\">\r\n            <form class=\"surveyEditForm\" novalidate class=\"m-2\" [formGroup]=\"surveyForm\" (ngSubmit)='onSubmit()'>\r\n                <input type=\"hidden\" formControlName=\"surveyId\">\r\n                <div class=\"card bg-light mb-3 transparent85 border-dark\">\r\n                    <h5 class=\"card-header\">Personal Info</h5>\r\n                    <div class=\"card-body\">\r\n                        Gender:\r\n                        <br>\r\n                        <div class=\"btn-group\">\r\n                            <label class=\"btn btn-light btn-outline-dark\">\r\n                                <input type=\"radio\" formControlName=\"gender\" value=\"male\"> Male\r\n                            </label>\r\n                            <label class=\"btn btn-light btn-outline-dark\">\r\n                                <input type=\"radio\" formControlName=\"gender\" value=\"female\"> Female\r\n                            </label>\r\n                        </div>\r\n\r\n                        <br>\r\n                        <br> Age Group:\r\n                        <br>\r\n                        <div class=\"btn-group\">\r\n                            <label class=\"btn btn-light btn-outline-dark\">\r\n                                <input type=\"radio\" formControlName=\"age\" value=\"Under 18\"> Under 18\r\n                            </label>\r\n                            <label class=\"btn btn-light btn-outline-dark\">\r\n                                <input type=\"radio\" formControlName=\"age\" value=\"18-25\"> 18-25\r\n                            </label>\r\n                            <label class=\"btn btn-light btn-outline-dark\">\r\n                                <input type=\"radio\" formControlName=\"age\" value=\"25-50\"> 25-50\r\n                            </label>\r\n                            <label class=\"btn btn-light btn-outline-dark\">\r\n                                <input type=\"radio\" formControlName=\"age\" value=\"Over 50\"> Over 50\r\n                            </label>\r\n                        </div>\r\n                        <br>\r\n                        <br>\r\n                    </div>\r\n                </div>\r\n                <div formArrayName=\"questions\">\r\n                    <div class=\"card bg-light mb-3 transparent85 border-dark\" *ngFor=\"let question of questions().controls; let qIndex=index\" [formGroupName]=\"qIndex\">\r\n                        <h5 class=\"card-header\">{{question.get(\"text\").value}}</h5>\r\n                        <input type=\"hidden\" formControlName=\"_id\">\r\n                        <div class=\"card-body\">\r\n                            <ng-container *ngIf=\"question.get('type').value === 'MCQ';  then MCQ; else (question.get('type').value === 'TRUEFALSE' && TRUEFALSE) || (question.get('type').value === 'SHORTANSWER' && SHORTANSWER)\">\r\n                            </ng-container>\r\n                            <ng-template #MCQ>\r\n                                <div formArrayName=\"answers\">\r\n                                    <div class=\"btn-group-vertical\">\r\n                                        <label class=\"btn btn-light btn-vertical btn-outline-dark\" *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\r\n                                            <div [formGroupName]=\"aIndex\" class=\"form-check\">\r\n                                                <input type=\"checkbox\" formControlName=\"ans\"> {{answer.get(\"text\").value}}\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template #TRUEFALSE>\r\n                                <div formArrayName=\"answers\">\r\n                                    <div class=\"btn-group\">\r\n                                        <label class=\"btn btn-light btn-outline-dark\" *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\r\n                                            <div [formGroupName]=\"aIndex\" class=\"tfcontainer\">\r\n                                                <input type=\"checkbox\" formControlName=\"ans\" id=\"ck{{qIndex}}{{aIndex}}\" (change)=\"onCkTrueFalseChange($event, qIndex, aIndex)\"> {{answer.get(\"text\").value}}\r\n                                                <span class=\"checkmark\"></span>\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template #SHORTANSWER>\r\n                                <div formArrayName=\"answers\">\r\n                                    <div *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\r\n                                        <div [formGroupName]=\"aIndex\" class=\"form-group\">\r\n                                            <textarea class=\"form-control\" rows=\"3\" formControlName=\"ans\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <fieldset class=\"form-group text-left\">\r\n                    <button class=\"btn btn-primary m-1\" type=\"submit\">\r\n                      <i class=\"far fa-paper-plane\"></i>\r\n                      Submit\r\n                    </button>\r\n                    <button class=\"btn btn-secondary m-1\" routerLink=\"/surveys/available\">\r\n                      <i class=\"fas fa-undo\"></i>\r\n                      Cancel\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute } from '@angular/router';\nimport Typed from 'typed.js';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent extends BasePageComponent implements OnInit {\n\n  constructor(route: ActivatedRoute) {\n    super(route);\n  }\n\n  ngOnInit(): void {\n    const options = {\n      strings: ['Innovation.', 'Discovery.', 'Web application development.', 'Angular front-end.', 'Node Js back-end.', 'MEAN platform'],\n      typeSpeed: 100,\n      backSpeed: 100,\n      showCursor: false,\n      cursorChar: '|',\n      loop: true\n    };\n\n    const typed = new Typed('.typed-element', options);\n  }\n\n}\n","<div class=\"container home-container\" style=\"position: relative;\">\n    <div class=\"row justify-content-center\">\n        <h1 class=\"typed-element display-3\">Survey Builder</h1>\n    </div>\n    <div class=\"row boxes-container\">\n        <div class=\"col-md-4\">\n            <div class=\"service-box\">\n                <div class=\"service-ico\">\n                    <span class=\"ico-circle\"><i class=\"fas fa-poll-h\" id=\"service-icon\"></i></span>\n                </div>\n                <div class=\"service-content\">\n                    <h2 class=\"s-title\">Survey Customization</h2>\n                    <p class=\"s-description text-center\">\n                        Create your survey with different types of questions and options.\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"service-box\">\n                <div class=\"service-ico\">\n                    <span class=\"ico-circle\"><i class=\"fas fa-chart-bar\" id=\"service-icon\"></i></span>\n                </div>\n                <div class=\"service-content\">\n                    <h2 class=\"s-title\">Statistics</h2>\n                    <p class=\"s-description text-center\">\n                        Discover the statistics behind your surveys through the admin dashboard.\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"service-box\">\n                <div class=\"service-ico\">\n                    <span class=\"ico-circle\"><i class=\"fas fa-dollar-sign\" id=\"service-icon\"></i></span>\n                </div>\n                <div class=\"service-content\">\n                    <h2 class=\"s-title\">Free Service</h2>\n                    <p class=\"s-description text-center\">\n                        Start creating your surveys. Account creation is free and there is no limit.\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../model/auth.service';\r\n\r\nimport { User } from '../../model/user.model';\r\n\r\n@Component({\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit\r\n{\r\n  public user: User;\r\n  public errorMessage: string;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  authenticate(form: NgForm): void\r\n  {\r\n    if (form.valid)\r\n    {\r\n      // perform authentication\r\n      this.auth.authenticate(this.user).subscribe(data => {\r\n        if (data.success)\r\n        {\r\n          this.auth.storeUserData(data.token, data.user);\r\n          this.router.navigateByUrl('surveys/list');\r\n        }else{\r\n          this.errorMessage = 'Incorrect username or password.';\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.errorMessage = 'Username and password are required';\r\n    }\r\n  }\r\n\r\n}\r\n","<main class=\"login-form\">\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card transparent8\">\r\n                    <div class=\"bg-danger mt-2 p-2 text-center text-white\" *ngIf='errorMessage != null'>\r\n                        {{ errorMessage }}\r\n                    </div>\r\n                    <div class=\"card-header\">\r\n                        <h4>Sign in</h4>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <form autocomplete='off' #form='ngForm' (ngSubmit)='authenticate(form)'>\r\n\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"username\">Username:</label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]='user.username' name='username' placeholder='Enter Username' id='username' required autofocus autocomplete='off'>\r\n                            </fieldset>\r\n\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"password\">Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" [(ngModel)]='user.password' name='password' placeholder='Enter Password' id='password' required autocomplete='off'>\r\n                            </fieldset>\r\n\r\n                            <fieldset class=\"form-group text-right\">\r\n                                <button class='btn btn-primary m-1' type='submit'>\r\n                  <i class=\"fas fa-sign-in-alt\"></i>\r\n                  Sign In\r\n                </button>\r\n                                <button class='btn btn-success m-1' routerLink='/register'>\r\n                  <i class=\"fas fa-user-plus\"></i>\r\n                  Sign up\r\n                </button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/model/auth.service';\nimport { User } from 'src/app/model/user.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: User;\n\n  constructor(private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void\n  {\n    this.user = new User();\n  }\n\n  onLogoutClick(): void\n  {\n    this.authService.logout().subscribe(data => {\n      this.router.navigate(['/login']);\n    });\n  }\n\n\n  isLoggedIn(): boolean\n  {\n    const result = this.authService.authenticated;\n    if (result)\n    {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n    return result;\n  }\n\n}\n","<!-- Main Navigation -->\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light transparent9\">\n    <a class=\"navbar-brand\" href=\"/\"><img src=\"../../../assets/images/logo.png\" alt=\"\" width=\"55\" height=\"55\"></a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/home\"><i class=\"fas fa-lg fa-home\"></i> Home</a>\n            </li>\n            <!--<li *ngIf='!isLoggedIn()' class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/about\"><i class=\"fas fa-info-circle\"></i> About </a>\n      </li>-->\n            <li class=\"nav-item\" *ngIf='!isLoggedIn()'>\n                <a class=\"nav-link\" href=\"/surveys/available\"><i class=\"fas fa-poll-h\"></i> Available Surveys </a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isLoggedIn()'>\n                <a class=\"nav-link\" href=\"/surveys/list\"><i class=\"fas fa-poll-h\"></i> Surveys </a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isLoggedIn()'>\n                <a class=\"nav-link\" href=\"/surveys/stats\"><i class=\"fas fa-chart-bar\"></i> Stats </a>\n            </li>\n            <li *ngIf='isLoggedIn()' class=\"navbar-text text-success d-none d-lg-inline\">\n                <a routerLink='/account/{{user.username}}' class=\"text-primary nav-link d-none d-lg-inline\">\n                    <i class=\"fas fa-lg fa-user\"></i> Welcome, {{ user.username }}\n                </a>\n            </li>\n            <li *ngIf='isLoggedIn()' class=\"nav-item\">\n                <a (click)='onLogoutClick()' routerLink='/logout' class=\"nav-link\" href=\"/login\">\n                    <i class=\"fas fa-lg fa-sign-out-alt\"></i> Logout </a>\n            </li>\n            <li *ngIf='!isLoggedIn()' class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/login\"><i class=\"fas fa-lg fa-sign-in-alt\"></i> Login </a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component } from '@angular/core';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms'\nimport { User } from 'src/app/model/user.model';\nimport { AuthService } from 'src/app/model/auth.service';\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n  submitted = false;\n  createdSurvey = false;\n  surveyForm: FormGroup;\n  user: User;\n\n  constructor(private fb: FormBuilder, private router: Router, private repository: SurveyRepository, private authService: AuthService) {\n    const result = this.authService.authenticated;\n    if (result) {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n\n    this.surveyForm = this.fb.group({\n      userId: this.user.username,\n      title: '',\n      expiration_dte: new Date(),\n      questions: this.fb.array([])\n    });\n  }\n\n  questions(): FormArray {\n    return this.surveyForm.get(\"questions\") as FormArray\n  }\n\n  answers(qIndex: number): FormArray {\n    return this.questions().at(qIndex).get(\"answers\") as FormArray\n  }\n\n  newAnswerToQuestion(): FormGroup {\n    return this.fb.group({\n      text: '',\n      isCorrect: false,\n    })\n  }\n\n  addAnswerToQuestion(qIndex: number) {\n    this.answers(qIndex).push(this.newAnswerToQuestion());\n  }\n\n  newQuestion(): FormGroup {\n    return this.fb.group({\n      type: '',\n      text: '',\n      answers: this.fb.array([])\n    })\n  }\n\n  addQuestion() {\n    this.questions().push(this.newQuestion());\n  }\n\n  surveyList(): void {\n    this.router.navigateByUrl('/surveys/list');\n  }\n\n  onSubmit(): void {\n    console.log(this.surveyForm.value);\n    this.repository.createSurvey(this.surveyForm.value).subscribe(data => {\n      if (data.success) {\n        Swal.fire(\n          'Survey Creation',\n          'The survey has been created successfully',\n          'success'\n        );\n\n        this.router.navigate(['/surveys/list'])\n          .then(() => {\n            window.location.reload();\n          });\n      } else {\n        Swal.fire(\n          'Survey Creation',\n          'An error ocurred while creating survey. Please try again later.',\n          'error'\n        );\n      }\n    });\n  }\n}\n","<div class=\"container \">\n    <div class=\"surveyFormContainer\">\n        <div class=\"col-md-offset-3 col-md-10 section-title\">\n            <h1 class=\"display-4\">Survey Creation</h1>\n        </div>\n        <div *ngIf='createdSurvey' class=\"m-2 text-center\">\n            <h2>Survey Created!</h2>\n            <button class=\"btn btn-primary\" (click)='availableSurveys()'>Return to Surveys</button>\n        </div>\n        <form class=\"surveyForm\" novalidate class=\"m-2\" (ngSubmit)='onSubmit()' [formGroup]=\"surveyForm\">\n            <div class=\"form-group\">\n                <label for=\"title\">Title</label>\n                <input class=\"form-control\" name='title' formControlName=\"title\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"Expiration Date\">Expiration Date</label>\n                <input class=\"form-control\" type=\"datetime-local\" name=\"expiration_dte\" formControlName=\"expiration_dte\" required>\n            </div>\n            <table class=\"table\" formArrayName=\"questions\">\n                <tr>\n                    <th colspan=\"2\">Questions:</th>\n                    <th width=\"150px\">\n                        <button type=\"button\" class=\"btn btn-success m-1\" (click)='addQuestion()'>Add Question</button>\n                    </th>\n                </tr>\n                <tr *ngFor=\"let question of questions().controls; let qIndex=index\" [formGroupName]=\"qIndex\">\n                    <td>\n                        Text :\n                        <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                    </td>\n                    <td>\n                        Type:\n                        <select class=\"form-control\" formControlName=\"type\" name=\"type\">\n                        <option selected value=\"MCQ\">Multiple Choise Question</option>\n                        <option value=\"TRUEFALSE\">True/False</option>\n                        <option value=\"SHORTANSWER\">Short Answer</option>\n                      </select>\n                    </td>\n                    <td>\n                        <br><button type=\"button\" class=\"btn btn-dark m-1\" (click)='addAnswerToQuestion(qIndex)'>Add Answer</button>\n                    </td>\n                    <td>\n                        <div formArrayName=\"answers\">\n                            <div *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\n                                <div [formGroupName]=\"aIndex\">\n                                    Answer :\n                                    <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                                    <div class=\"form-check form-switch\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isCorrect\">\n                                        <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Is Answer correct?</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <div class=\"text-left\">\n                <button class=\"btn btn-secondary m-1\" (click)='surveyList()'>Back</button>\n                <button class=\"btn btn-primary m-1\" type=\"submit\">Create Survey</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { User } from 'src/app/model/user.model';\r\nimport { UserRepository } from '../../model/user.repository';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n    selector: 'app-account',\r\n    templateUrl: './account.component.html',\r\n    styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit{\r\n\r\n    public user: User;\r\n    public errorMessage: string;\r\n    public username: string;\r\n\r\n    constructor(private router: Router, private authService: AuthService, private repository: UserRepository) {}\r\n\r\n    ngOnInit(): void {\r\n        const result = this.authService.authenticated;\r\n        if (result) {\r\n            this.username = JSON.parse(localStorage.getItem('user')).username;\r\n            this.repository.getUserByUsername(this.username).subscribe(user => {\r\n                this.user = user;\r\n            });\r\n        }\r\n    }\r\n\r\n    updateProfile(form: NgForm): void {\r\n        if (form.valid) {\r\n            this.repository.updateUser(this.username, this.user).subscribe(data => {\r\n                if (data.success) {\r\n                    Swal.fire(\r\n                        'Profile Update',\r\n                        'Your profile has been update successfully',\r\n                        'success'\r\n                    );\r\n\r\n                    this.router.navigate(['/account/' + this.username])\r\n                        .then(() => {\r\n                            window.location.reload();\r\n                        });\r\n                } else {\r\n                    Swal.fire(\r\n                        'Profile Update',\r\n                        'An error ocurred while updating ypur profile. Please try again later.',\r\n                        'error'\r\n                    );\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.errorMessage = 'Form Data Invalid';\r\n        }\r\n    }\r\n}","<main class=\"container account-container\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-7\">\r\n            <div class=\"card transparent85\">\r\n                <div class=\"card-header\">\r\n                    <h2>Profile settings</h2>\r\n                </div>\r\n                <div class=\"bg-danger mt-2 p-2 text-center text-white\" *ngIf='errorMessage != null'>\r\n                    {{ errorMessage }}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form autocomplete='off' #form='ngForm' (ngSubmit)='updateProfile(form)'>\r\n                        <input type=\"hidden\" name=\"_id\" [(ngModel)]='user._id'>\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"username\">Username: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]='user.username' placeholder=\"Enter username\" id=\"username\" disabled required autofocus>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"name\">Name: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]='user.name' placeholder=\"Enter Name\" id=\"name\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"email\">Email: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]='user.email' placeholder=\"Enter Email Address\" id=\"email\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"phone\">Phone number: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"phone\" [(ngModel)]='user.phone' placeholder=\"Enter Phone Number\" id=\"phone\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"address\">Address: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"address\" [(ngModel)]='user.address' placeholder=\"Enter Address\" id=\"address\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group text-right\">\r\n                            <button class='btn btn-primary m-1' type='submit'>\r\n                              <i class=\"fas fa-user-edit\"></i>\r\n                              Update\r\n                            </button>\r\n                            <button class='btn btn-secondary m-1' routerLink='/surveys/list'>\r\n                              <i class=\"fas fa-undo\"></i>\r\n                              Cancel\r\n                            </button>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-survey-mngmt',\r\n  templateUrl: './list/list.component.html'\r\n})\r\nexport class SurveyMngmtComponent {\r\n\r\n  constructor(private auth: AuthService,\r\n    private router: Router) {}\r\n\r\n  logout(): void\r\n  {\r\n  this.auth.logout();\r\n\r\n  this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<div class=\"container availableListContainer\">\n    <div class=\"row\">\n        <div class=\"col-md-offset-3 col-md-10\">\n            <h1 class=\"display-4\">Surveys</h1>\n            <a href='/surveys/create' class=\"btn btn-primary\" role=\"button\">\n                <i class=\"fas fa-plus-circle\"></i> Create Survey</a>\n            <!-- Surveys -->\n            <div class=\"col-10 p-2\">\n                <div *ngFor='let survey of surveys' class=\"card m-1 p-1 bg-light transparent85\">\n                    <h4>\n                        {{ survey.title }}\n                        <span class=\"badge badge-pill badge-secondary float-right\">\n                        Creator: <span class=\"badge badge-light\">{{ survey.userId }}</span>\n                        </span>\n                    </h4>\n                    <div class=\"card-text bg-white p-1\">\n                        <span class=\"col-2\"><b>#Questions:</b> {{survey.questions.length}}</span>\n                        <b>Expires on: </b>{{ survey.expiration_dte | date:'yyyy-MM-dd hh:mm a'}}\n                        <button class=\"btn btn-warning btn-sm float-right\" (click)='updateQuiz(survey._id)'>\n                            <i class=\"far fa-edit\"></i> Edit Survey\n                        </button>\n                        <button class=\"btn btn-danger btn-sm float-right\" (click)='removeQuiz(survey._id)'>\n                            <i class=\"far fa-trash-alt\"></i> Delete Survey\n                        </button>\n                        <button class=\"btn btn-success btn-sm float-right\" routerLink=\"/surveys/stats/{{survey._id}}\">\n                            <i class=\"fas fa-chart-pie\"></i> View Stats\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: \"http://localhost:4200/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Bottom Nav -->\n<footer>\n    <nav class=\"fixed-bottom navbar navbar-expand-lg navbar-light bg-light transparent9\">\n        <h6 class=\"display-6 navbar-text\">&copy; Copyright 2021. All Rights reserved.</h6>\n    </nav>\n</footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModelModule } from '../model/model.module';\nimport { ListComponent } from './list/list.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { CreateComponent } from './create/create.component';\nimport { UpdateComponent } from './update/update.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AvailableComponent } from './available/available.component';\nimport { AccountComponent } from './account/account.component';\nimport { RespondComponent } from './respond/respond.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\n@NgModule({\n  declarations: [ListComponent, CreateComponent, UpdateComponent, AvailableComponent, AuthComponent, RegisterComponent, RespondComponent, StatsComponent, AccountComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    FormsModule,\n    ModelModule,\n    ReactiveFormsModule,\n    MDBBootstrapModule.forRoot()\n  ],\n  providers: [AuthGuard],\n})\nexport class SurveyMngmtModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { StaticDataSource } from './static.datasource';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SurveyRepository} from './survey.repository';\r\n\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  providers: [SurveyRepository, \r\n  {provide: StaticDataSource, useClass: RestDataSource},\r\n  RestDataSource]\r\n})\r\nexport class ModelModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Survey } from './survey.model';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from './user.model';\r\n\r\nconst PROTOCOL = 'http';\r\nconst PORT = 3500;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestDataSource\r\n{\r\n  private user: User;\r\n  private baseUrl: string;\r\n  private authToken: string;\r\n\r\n  private httpOptions =\r\n  {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\r\n    })\r\n  };\r\n\r\n  constructor(private http: HttpClient, private jwtService: JwtHelperService)\r\n  {\r\n    //this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/api/`;\r\n    this.baseUrl = `https://final-survey-platform-comp229.herokuapp.com/api/`\r\n  }\r\n\r\n  getSurveys(): Observable<Survey[]>\r\n  {\r\n    return this.http.get<Survey[]>(this.baseUrl + 'surveys/list');\r\n  }\r\n\r\n  createSurvey(survey: Survey): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<Survey>(this.baseUrl + 'surveys/create', survey, this.httpOptions);\r\n  }\r\n\r\n  getSurveyById(id: string): Observable<Survey>\r\n  {\r\n    return this.http.get<Survey>(this.baseUrl + 'surveys/get/' + id);\r\n  }\r\n\r\n  updateSurvey(id: string, survey: Survey): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<Survey>(this.baseUrl + 'surveys/update/' + id, survey, this.httpOptions);\r\n  }\r\n\r\n  deleteSurvey(id: string)\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<Survey>(this.baseUrl + 'surveys/delete/' + id, this.httpOptions);\r\n  }\r\n\r\n  answerSurvey(response: any, surveyId: string): Observable<any>\r\n  {\r\n    return this.http.post<Survey>(this.baseUrl + 'surveys/response/' + surveyId, response, this.httpOptions);\r\n  }\r\n\r\n  getUserCreatedSurveys(userId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/count/forUser/' + userId, this.httpOptions);\r\n  }\r\n\r\n  getUserCreatedSurveysAnswers(userId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/creator/' + userId, this.httpOptions);\r\n  }\r\n\r\n  getSurveysAnsweredPerSurvey(surveyId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/survey/' + surveyId, this.httpOptions);\r\n  }\r\n\r\n  getSurveysCorrectAnswersForCreator(userId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/correct/creator/' + userId, this.httpOptions);\r\n  }\r\n\r\n  getSurveysCorrectAnswersForSurvey(surveyId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/correct/survey/' + surveyId, this.httpOptions);\r\n  }\r\n\r\n  getSurveysTotaltAnswersForCreator(userId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/total/creator/' + userId, this.httpOptions);\r\n  }\r\n\r\n  getGeneralGenderStats(userId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/gender/creator/' + userId, this.httpOptions);\r\n  }\r\n\r\n  getGenderStatsBySurvey(surveyId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/gender/survey/' + surveyId, this.httpOptions);\r\n  }\r\n  \r\n  getAgeStatsBySurvey(surveyId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/age/survey/' + surveyId, this.httpOptions);\r\n  }\r\n\r\n  getGeneralAgeStats(userId: string): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'surveys/get/answered/age/creator/' + userId, this.httpOptions);\r\n  }\r\n\r\n  getUserByUsername(username: string): Observable<User>\r\n  {\r\n    this.loadToken();\r\n    return this.http.get<any>(this.baseUrl + 'users/get/' + username, this.httpOptions);\r\n  }\r\n\r\n  updateUser(username: string, user: User): Observable<any>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<User>(this.baseUrl + 'users/update/' + username, user, this.httpOptions);\r\n  }\r\n\r\n  storeUserData(token: any, user: User): void\r\n  {\r\n    localStorage.setItem('id_token', token);\r\n    //localStorage.setItem('id_token', 'Bearer' + token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  registerUser(user: User): Observable<any>\r\n  {\r\n    return this.http.post<User>(this.baseUrl + 'register', user, this.httpOptions);\r\n  }\r\n\r\n  authenticate(user: User): Observable<any>\r\n  {\r\n    return this.http.post<any>(this.baseUrl + 'login', user, this.httpOptions);\r\n  }\r\n  \r\n  logout(): Observable<any>\r\n  {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n\r\n    return this.http.get<any>(this.baseUrl + 'logout', this.httpOptions);\r\n  }\r\n\r\n  loggedIn(): boolean\r\n  {\r\n    return !this.jwtService.isTokenExpired(this.authToken);\r\n  }\r\n\r\n  private loadToken(): void\r\n  {\r\n    const token = localStorage.getItem('id_token');\r\n    if(token){\r\n      this.authToken = token;\r\n      this.httpOptions.headers = this.httpOptions.headers.set('Authorization', this.authToken);\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from './user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserRepository\r\n{\r\n  private users: User[] = [];\r\n\r\n  constructor(private dataSource: RestDataSource)\r\n  {\r\n    //TODO\r\n  }\r\n\r\n  registerUser(user: User): Observable<any>\r\n  {\r\n    return this.dataSource.registerUser(user);\r\n  }\r\n\r\n  getUserByUsername(username: string): Observable<User>\r\n  {\r\n    return this.dataSource.getUserByUsername(username);\r\n  }\r\n\r\n  updateUser(username: string, user: User): Observable<any>\r\n  {\r\n    return this.dataSource.updateUser(username, user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-base-page',\n  templateUrl: './base-page.component.html',\n  styleUrls: ['./base-page.component.css']\n})\nexport class BasePageComponent implements OnInit {\n  title: string;\n\n  constructor(private route: ActivatedRoute){  }\n\n  ngOnInit(): void {\n    this.title = this.route.snapshot.data.title;\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"jumbotron\">\n        <h1 class=\"display-4\">Welcome to {{ title }}</h1>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SurveyRepository } from '../../model/survey.repository';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\nimport { Survey } from '../../model/survey.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/model/user.model';\r\nimport * as jspdf from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\n@Component({\r\n    selector: 'app-stats',\r\n    templateUrl: './stats.component.html',\r\n    styleUrls: ['./stats.component.css']\r\n})\r\nexport class StatsComponent implements OnInit{\r\n\r\n    public user: User = new User();;\r\n    public surveyId: string;\r\n    public survey: Survey;\r\n    private sub: any;\r\n    public genderChartType: string = 'pie';\r\n    public generatedSurveys: number = 0;\r\n    public countAnsweredSurveys: number = 0;\r\n    public generatedSurvesPercentaje: string;\r\n    public countAnsweredSurveysPercentaje: string;\r\n    public totalGeneralCorrectAnswers: number = 0;\r\n    public totalGeneralQuestions: number = 0;\r\n    public totalCorrectPercentajeStr: string;\r\n    public totalCorrectPercentaje: number = 0;\r\n\r\n    constructor(private router: Router, private repository: SurveyRepository, private authService: AuthService, private route: ActivatedRoute) { }\r\n\r\n    ngOnInit(): void {\r\n        const result = this.authService.authenticated;\r\n        if (result) {\r\n            this.user = JSON.parse(localStorage.getItem('user'));\r\n        }\r\n\r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.surveyId = params['surveyId'];\r\n\r\n            if (this.surveyId != undefined) {\r\n                this.repository.getSurveyById(this.surveyId).subscribe(survey => {\r\n                    this.survey = survey;\r\n\r\n                    this.repository.getSurveysAnsweredPerSurvey(this.surveyId).subscribe(data => {\r\n                        this.countAnsweredSurveys = data.count;\r\n                        this.countAnsweredSurveysPercentaje = (data.count * 2) + \"%\";\r\n                    });\r\n\r\n                    this.repository.getSurveysCorrectAnswersForSurvey(this.surveyId).subscribe(data => {\r\n                        this.totalGeneralCorrectAnswers = data.totalCorrect;\r\n                        if (this.totalGeneralCorrectAnswers > 0) {\r\n                            this.totalGeneralQuestions = this.countAnsweredSurveys * this.survey.questions.length;\r\n                            this.totalCorrectPercentaje = this.totalGeneralCorrectAnswers * 100 / this.totalGeneralQuestions;\r\n                            this.totalCorrectPercentaje = parseFloat(this.totalCorrectPercentaje.toFixed(2));\r\n                            this.totalCorrectPercentajeStr = this.totalCorrectPercentaje + \"%\";\r\n                        } else {\r\n                            this.totalGeneralQuestions = 0;\r\n                            this.totalCorrectPercentaje = 0;\r\n                            this.totalCorrectPercentajeStr = \"0%\";\r\n                        }\r\n                    });\r\n\r\n                    this.repository.getGenderStatsBySurvey(this.surveyId).subscribe(data => {\r\n                        var indexMale = data.result.findIndex(stat => stat._id === \"male\");\r\n                        var indexFemale = data.result.findIndex(stat => stat._id === \"female\");\r\n\r\n                        var valueMale = 0;\r\n                        var valueFemale = 0;\r\n\r\n                        if (indexMale > -1) {\r\n                            valueMale = data.result[indexMale].count;\r\n                        }\r\n\r\n                        if (indexFemale > -1) {\r\n                            valueFemale = data.result[indexFemale].count\r\n                        }\r\n\r\n                        this.genderChartDatasets = [{ data: [valueMale, valueFemale] }];\r\n                    });\r\n\r\n                    this.repository.getAgeStatsBySurvey(this.surveyId).subscribe(data => {\r\n                        var indexunder18 = data.result.findIndex(stat => stat._id === \"Under 18\");\r\n                        var index1825 = data.result.findIndex(stat => stat._id === \"18-25\");\r\n                        var index2550 = data.result.findIndex(stat => stat._id === \"25-50\");\r\n                        var indexOver50 = data.result.findIndex(stat => stat._id === \"Over 50\");\r\n\r\n                        var valueUnder18 = 0;\r\n                        var value1825 = 0;\r\n                        var value2550 = 0;\r\n                        var valueOver50 = 0;\r\n\r\n                        if (indexunder18 > -1) {\r\n                            valueUnder18 = data.result[indexunder18].count;\r\n                        }\r\n\r\n                        if (index1825 > -1) {\r\n                            value1825 = data.result[index1825].count;\r\n                        }\r\n\r\n                        if (index2550 > -1) {\r\n                            value2550 = data.result[index2550].count;\r\n                        }\r\n\r\n                        if (indexOver50 > -1) {\r\n                            valueOver50 = data.result[indexOver50].count;\r\n                        }\r\n\r\n                        this.ageChartDatasets = [{ data: [valueUnder18, value1825, value2550, valueOver50], label: '' }];\r\n                    });\r\n                });\r\n            } else {\r\n                this.repository.getUserCreatedSurveys(this.user.username).subscribe(data => {\r\n                    this.generatedSurveys = data.count;\r\n                    this.generatedSurvesPercentaje = (data.count * 2) + \"%\";\r\n                });\r\n\r\n                this.repository.getUserCreatedSurveysAnswers(this.user.username).subscribe(data => {\r\n                    this.countAnsweredSurveys = data.totalCount;\r\n                    this.countAnsweredSurveysPercentaje = (data.totalCount * 2) + \"%\";\r\n                });\r\n\r\n                this.repository.getSurveysCorrectAnswersForCreator(this.user.username).subscribe(data => {\r\n                    this.totalGeneralCorrectAnswers = data.totalCorrect;\r\n                });\r\n\r\n                this.repository.getSurveysTotalAnswersForCreator(this.user.username).subscribe(data => {\r\n                    this.totalGeneralQuestions = data.result[0].count;\r\n                    this.totalCorrectPercentaje = this.totalGeneralCorrectAnswers * 100 / this.totalGeneralQuestions;\r\n                    this.totalCorrectPercentaje = parseFloat(this.totalCorrectPercentaje.toFixed(2));\r\n                    this.totalCorrectPercentajeStr = this.totalCorrectPercentaje + \"%\";\r\n                });\r\n\r\n                this.repository.getGeneralGenderStats(this.user.username).subscribe(data => {\r\n                    var indexMale = data.result.findIndex(stat => stat._id === \"male\");\r\n                    var indexFemale = data.result.findIndex(stat => stat._id === \"female\");\r\n\r\n                    var valueMale = 0;\r\n                    var valueFemale = 0;\r\n\r\n                    if (indexMale > -1) {\r\n                        valueMale = data.result[indexMale].count;\r\n                    }\r\n\r\n                    if (indexFemale > -1) {\r\n                        valueFemale = data.result[indexFemale].count\r\n                    }\r\n\r\n                    this.genderChartDatasets = [{ data: [valueMale, valueFemale] }];\r\n                });\r\n\r\n                this.repository.getGeneralAgeStats(this.user.username).subscribe(data => {\r\n                    var indexunder18 = data.result.findIndex(stat => stat._id === \"Under 18\");\r\n                    var index1825 = data.result.findIndex(stat => stat._id === \"18-25\");\r\n                    var index2550 = data.result.findIndex(stat => stat._id === \"25-50\");\r\n                    var indexOver50 = data.result.findIndex(stat => stat._id === \"Over 50\");\r\n\r\n                    var valueUnder18 = 0;\r\n                    var value1825 = 0;\r\n                    var value2550 = 0;\r\n                    var valueOver50 = 0;\r\n\r\n                    if (indexunder18 > -1) {\r\n                        valueUnder18 = data.result[indexunder18].count;\r\n                    }\r\n\r\n                    if (index1825 > -1) {\r\n                        value1825 = data.result[index1825].count;\r\n                    }\r\n\r\n                    if (index2550 > -1) {\r\n                        value2550 = data.result[index2550].count;\r\n                    }\r\n\r\n                    if (indexOver50 > -1) {\r\n                        valueOver50 = data.result[indexOver50].count;\r\n                    }\r\n\r\n                    this.ageChartDatasets = [{ data: [valueUnder18, value1825, value2550, valueOver50], label: '' }];\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public genderChartDatasets: Array<any> = [{ data: [0, 0] }];\r\n\r\n    public genderChartLabels: Array<any> = ['Male', 'Female'];\r\n\r\n    public genderChartColors: Array<any> = [\r\n        {\r\n            backgroundColor: ['#0080ff', '#ff99dd'],\r\n            hoverBackgroundColor: ['#66b3ff', '#ffccee'],\r\n            borderWidth: 2\r\n        }\r\n    ];\r\n\r\n    public genderChartOptions: any = {\r\n        responsive: true\r\n    };\r\n\r\n    public ageChartType: string = 'bar';\r\n\r\n    public ageChartDatasets: Array<any> = [\r\n        { data: [0, 0, 0, 0], label: '' }\r\n    ];\r\n\r\n    public ageChartLabels: Array<any> = ['Under 18', '18-25', '25-50', 'Over 50'];\r\n\r\n    public ageChartColors: Array<any> = [\r\n        {\r\n            backgroundColor: [\r\n                'rgba(255, 99, 132, 0.4)',\r\n                'rgba(54, 162, 235, 0.4)',\r\n                'rgba(255, 206, 86, 0.4)',\r\n                'rgba(89, 73, 228, 0.5)'\r\n            ],\r\n            borderColor: [\r\n                'rgba(255,99,132,1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(89, 73, 228, 1)'\r\n            ],\r\n            borderWidth: 2,\r\n        }\r\n    ];\r\n\r\n    public ageChartOptions: any = {\r\n        responsive: true\r\n    };\r\n\r\n    public exportGeneralStats() {\r\n        var data = document.getElementById('stats-exportable');\r\n        html2canvas(data, { scrollY: - window.scrollY }).then(function (canvas) {\r\n            const contentDataURL = canvas.toDataURL('image/png')\r\n            let pdf = new jspdf.jsPDF('landscape', 'px', 'a4');\r\n            pdf.addImage(contentDataURL, 'PNG', 20, 20, 500, 400);\r\n            pdf.save('generalStats.pdf');\r\n        });\r\n    }\r\n\r\n\r\n    public exportStatsBySurvey(surveyTitle: string) {\r\n        var data = document.getElementById('stats-exportable');\r\n        html2canvas(data, { scrollY: - window.scrollY }).then(function (canvas) {\r\n            const contentDataURL = canvas.toDataURL('image/png')\r\n            let pdf = new jspdf.jsPDF('landscape', 'px', 'a4');\r\n            pdf.addImage(contentDataURL, 'PNG', 20, 20, 500, 400);\r\n            pdf.save(surveyTitle + '_stats.pdf');\r\n        });\r\n    }\r\n}","<!-- Individual Statistics-->\r\n<div *ngIf='surveyId!= undefined' class=\"container stats-container\">\r\n    <div class=\"row position-relative\">\r\n        <div class=\"charts-container\">\r\n            <a [routerLink]=\"\" class=\"btn btn-light btn-lg transparent85\" (click)=\"exportStatsBySurvey(survey.title)\">\r\n                <i class=\"fas fa-file-pdf\"></i> Export\r\n            </a>\r\n        </div>\r\n        <div class=\"col-md-offset-3 col-md-10\" id=\"stats-exportable\">\r\n            <div class=\"section-title\">\r\n                <h1 class=\"display-4\">{{ survey.title }}</h1>\r\n            </div>\r\n            <section>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-6 col-sm-6 col-12 mb-4\">\r\n                        <div class=\"card transparent85\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex justify-content-between px-md-1\">\r\n                                    <div>\r\n                                        <h3 class=\"text-success\">{{ countAnsweredSurveys }}</h3>\r\n                                        <p class=\"mb-0\">Times Answered</p>\r\n                                    </div>\r\n                                    <div class=\"align-self-center\">\r\n                                        <i class=\"fas fa-edit text-success fa-3x\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"px-md-1\">\r\n                                    <div class=\"progress mt-3 mb-1 rounded\" style=\"height: 7px\">\r\n                                        <div class=\"progress-bar bg-success\" role=\"progressbar\" [style.width]=\"countAnsweredSurveysPercentaje\" aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-6 col-sm-6 col-12 mb-4\">\r\n                        <div class=\"card transparent85\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex justify-content-between px-md-1\">\r\n                                    <div>\r\n                                        <h3 class=\"text-danger\">{{totalCorrectPercentaje}}%</h3>\r\n                                        <p class=\"mb-0\">Response effectiveness</p>\r\n                                    </div>\r\n                                    <div class=\"align-self-center\">\r\n                                        <i class=\"far fa-check-square text-danger fa-3x\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"px-md-1\">\r\n                                    <div class=\"progress mt-3 mb-1 rounded\" style=\"height: 7px\">\r\n                                        <div class=\"progress-bar bg-danger\" role=\"progressbar\" [style.width]=\"totalCorrectPercentajeStr\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table class=\"charts-table\">\r\n                    <tr>\r\n                        <td style=\"width: 65%;\">\r\n                            <div id=\"pie-chart-gender\" class=\"d-inline p-2\">\r\n                                <h2 class=\"section-heading mb-4\">\r\n                                    Gender\r\n                                </h2>\r\n                                <div class=\"survey-chart\">\r\n                                    <canvas mdbChart [chartType]=\"genderChartType\" [datasets]=\"genderChartDatasets\" [labels]=\"genderChartLabels\" [colors]=\"genderChartColors\" [options]=\"genderChartOptions\" [legend]=\"true\">\r\n                                    </canvas>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div id=\"pie-chart-gender\" class=\"d-inline p-2\" style=\"padding-left: 10%;\">\r\n                                <h2 class=\"section-heading mb-4\">\r\n                                    Age Range\r\n                                </h2>\r\n                                <div>\r\n                                    <canvas style=\"height: 250px; width: 500px;\" mdbChart [chartType]=\"ageChartType\" [datasets]=\"ageChartDatasets\" [labels]=\"ageChartLabels\" [colors]=\"ageChartColors\" [options]=\"ageChartOptions\" [legend]=\"true\">\r\n                                    </canvas>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- General Statistics -->\r\n<div *ngIf='surveyId=== undefined' class=\"container stats-container\">\r\n    <div class=\"row position-relative\">\r\n        <div class=\"charts-container\">\r\n            <a [routerLink]=\"\" class=\"btn btn-light btn-lg transparent85\" (click)=\"exportGeneralStats()\">\r\n                <i class=\"fas fa-file-pdf\"></i> Export\r\n            </a>\r\n        </div>\r\n        <div class=\"col-md-offset-3 col-md-10\" id=\"stats-exportable\">\r\n            <div class=\"section-title\">\r\n                <h1 class=\"display-4\">General Statistics</h1>\r\n            </div>\r\n            <section>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xl-4 col-sm-6 col-12 mb-4\">\r\n                        <div class=\"card transparent85\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex justify-content-between px-md-1\">\r\n                                    <div>\r\n                                        <h3 class=\"text-info\">{{ generatedSurveys }}</h3>\r\n                                        <p class=\"mb-0\">Created Surveys</p>\r\n                                    </div>\r\n                                    <div class=\"align-self-center\">\r\n                                        <i class=\"fas fa-poll text-info fa-3x\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"px-md-1\">\r\n                                    <div class=\"progress mt-3 mb-1 rounded\" style=\"height: 7px\">\r\n                                        <div class=\"progress-bar bg-info\" role=\"progressbar\" [style.width]=\"generatedSurvesPercentaje\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-6 col-12 mb-4\">\r\n                        <div class=\"card transparent85\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex justify-content-between px-md-1\">\r\n                                    <div>\r\n                                        <h3 class=\"text-success\">{{ countAnsweredSurveys }}</h3>\r\n                                        <p class=\"mb-0\">Surveys Answered</p>\r\n                                    </div>\r\n                                    <div class=\"align-self-center\">\r\n                                        <i class=\"fas fa-edit text-success fa-3x\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"px-md-1\">\r\n                                    <div class=\"progress mt-3 mb-1 rounded\" style=\"height: 7px\">\r\n                                        <div class=\"progress-bar bg-success\" role=\"progressbar\" [style.width]=\"countAnsweredSurveysPercentaje\" aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4 col-sm-6 col-12 mb-4\">\r\n                        <div class=\"card transparent85\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex justify-content-between px-md-1\">\r\n                                    <div>\r\n                                        <h3 class=\"text-danger\">{{totalCorrectPercentaje}}%</h3>\r\n                                        <p class=\"mb-0\">Correct answers</p>\r\n                                    </div>\r\n                                    <div class=\"align-self-center\">\r\n                                        <i class=\"far fa-check-square text-danger fa-3x\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"px-md-1\">\r\n                                    <div class=\"progress mt-3 mb-1 rounded\" style=\"height: 7px\">\r\n                                        <div class=\"progress-bar bg-danger\" role=\"progressbar\" [style.width]=\"totalCorrectPercentajeStr\" aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table class=\"charts-table\">\r\n                    <tr>\r\n                        <td style=\"width: 65%;\">\r\n                            <div id=\"pie-chart-gender\" class=\"d-inline p-2\">\r\n                                <h2 class=\"section-heading mb-4\">\r\n                                    Gender\r\n                                </h2>\r\n                                <div class=\"survey-chart\">\r\n                                    <canvas mdbChart [chartType]=\"genderChartType\" [datasets]=\"genderChartDatasets\" [labels]=\"genderChartLabels\" [colors]=\"genderChartColors\" [options]=\"genderChartOptions\" [legend]=\"true\">\r\n                                    </canvas>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div id=\"pie-chart-gender\" class=\"d-inline p-2\" style=\"padding-left: 10%;\">\r\n                                <h2 class=\"section-heading mb-4\">\r\n                                    Age Range\r\n                                </h2>\r\n                                <div>\r\n                                    <canvas style=\"height: 250px; width: 500px;\" mdbChart [chartType]=\"ageChartType\" [datasets]=\"ageChartDatasets\" [labels]=\"ageChartLabels\" [colors]=\"ageChartColors\" [options]=\"ageChartOptions\" [legend]=\"true\">\r\n                                    </canvas>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'BookStore';\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>\n","export class User\r\n{\r\n  public _id: string;\r\n  public username: string;\r\n  public password: string;\r\n  public email: string;\r\n  public name: string;\r\n  public address: string;\r\n  public phone: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { AuthService } from 'src/app/model/auth.service';\nimport { Survey } from '../../model/survey.model';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/model/user.model';\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n  constructor(private router: Router, private repository: SurveyRepository, private authService: AuthService) { }\n\n  user: User;\n\n  get surveys(): Survey[] {\n    const result = this.authService.authenticated;\n    if (result) {\n      this.user = JSON.parse(localStorage.getItem('user'));\n    }\n\n    return this.repository.getSurveysByUserName(this.user.username);\n  }\n\n  updateQuiz(surveyId: string): void {\n    this.router.navigate(['/surveys/update/', surveyId]);\n  }\n\n  removeQuiz(surveyId: string): void {\n\n    Swal.fire({\n      title: 'Are you sure to delete the survey?',\n      text: \"The survey will be deleted permanently\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete survey'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.repository.removeSurvey(surveyId)\n          .subscribe(\n            response => {\n              window.location.reload();\n            },\n            error => {\n              console.log(error);\n            });\n      }\n    });\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { RouterModule } from '@angular/router';\nimport { SurveyMngmtModule } from './survey-mngmt/survey-mngmt.module';\nimport { JwtModule, JwtHelperService, JwtInterceptor } from '@auth0/angular-jwt';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nexport function jwtTokenGetter(): string\n{\n  return localStorage.getItem('id_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule,\n    PagesModule,\n    SurveyMngmtModule,\n    MDBBootstrapModule.forRoot(),\n\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { SurveyMngmtComponent } from '../survey-mngmt/survey-mngmt.component';\r\n\r\n\r\n@Injectable()\r\nexport class StoreFirstGuard\r\n{\r\n  private firstNavigation = true;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.firstNavigation)\r\n    {\r\n      this.firstNavigation = false;\r\n      if (route.component !== SurveyMngmtComponent)\r\n      {\r\n        this.router.navigateByUrl('/');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n{\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.auth.authenticated)\r\n    {\r\n      console.log('authenticated');\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      console.log('cannot authenticate');\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Survey } from './survey.model';\r\nimport { Observable, from } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class StaticDataSource\r\n{\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PartialsModule } from '../partials/partials.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, FormsModule, PartialsModule],\r\n  declarations: [\r\n    AboutComponent,\r\n    HomeComponent\r\n  ],\r\n  exports: [\r\n    AboutComponent,\r\n    HomeComponent,\r\n    PartialsModule]\r\n})\r\nexport class PagesModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserRepository } from '../../model/user.repository';\r\nimport { User } from '../../model/user.model';\r\nimport { AuthService } from '../../model/auth.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit\r\n{\r\n  public user: User;\r\n  public errorMessage: string;\r\n\r\n  constructor(private router: Router, private repository: UserRepository, private auth: AuthService ) { }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  register(form: NgForm): void\r\n  {\r\n    if (form.valid)\r\n    {\r\n      this.repository.registerUser(this.user).subscribe(data => {\r\n        if (data.success){\r\n\r\n          Swal.fire({\r\n            title: 'Account created',\r\n            html: 'You will be redirected to sign in...',\r\n            timer: 2000,\r\n            timerProgressBar: true,\r\n            didOpen: () => {\r\n              Swal.showLoading()\r\n            },\r\n            willClose: () => {\r\n              this.router.navigateByUrl('/login');\r\n            }\r\n          }).then((result) => {\r\n            /* Read more about handling dismissals below */\r\n            if (result.dismiss === Swal.DismissReason.timer) {\r\n              console.log('I was closed by the timer')\r\n            }\r\n          });\r\n\r\n        }else{\r\n          this.errorMessage = 'Error registering user.';\r\n          console.log(data.error);\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.errorMessage = 'Form Data Invalid';\r\n    }\r\n  }\r\n}\r\n","<main class=\"container register-form\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card transparent85\">\r\n                <div class=\"card-header\">\r\n                    <h2>Create your account</h2>\r\n                </div>\r\n                <div class=\"bg-danger mt-2 p-2 text-center text-white\" *ngIf='errorMessage != null'>\r\n                    {{ errorMessage }}\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form autocomplete='off' #form='ngForm' (ngSubmit)='register(form)'>\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"username\">Username: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]='user.username' placeholder=\"Enter username\" id=\"username\" required autofocus>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"password\">Password: </label>\r\n                            <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]='user.password' placeholder=\"Enter password\" id=\"password\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"name\">Name: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]='user.name' placeholder=\"Enter Name\" id=\"name\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"email\">Email: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]='user.email' placeholder=\"Enter Email Address\" id=\"email\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"phone\">Phone number: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"phone\" [(ngModel)]='user.phone' placeholder=\"Enter Phone Number\" id=\"phone\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group\">\r\n                            <label for=\"address\">Address: </label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"address\" [(ngModel)]='user.address' placeholder=\"Enter Address\" id=\"address\" required>\r\n                        </fieldset>\r\n\r\n                        <fieldset class=\"form-group text-right\">\r\n                            <button class='btn btn-primary m-1' type='submit'>\r\n                              <i class=\"fas fa-sign-in-alt\"></i>\r\n                              Sign Up\r\n                            </button>\r\n                            <button class='btn btn-secondary m-1' routerLink='/home'>\r\n                              <i class=\"fas fa-undo\"></i>\r\n                              Cancel\r\n                            </button>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService\r\n{\r\n  user: User;\r\n\r\n  constructor(private datasource: RestDataSource)\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  authenticate(user: User): Observable<any>\r\n  {\r\n    return this.datasource.authenticate(user);\r\n  }\r\n\r\n  storeUserData(token: any, user: User): void\r\n  {\r\n    this.datasource.storeUserData(token, user);\r\n  }\r\n\r\n  get authenticated(): boolean\r\n  {\r\n    return this.datasource.loggedIn();\r\n  }\r\n\r\n  logout(): Observable<any>\r\n  {\r\n    return this.datasource.logout();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { Survey } from 'src/app/model/survey.model';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, FormBuilder } from '@angular/forms'\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  surveyId: string;\n  public surveyToEdit: Survey;\n  private sub: any;\n  surveyEditForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private route: ActivatedRoute, private repository: SurveyRepository) {\n    this.sub = this.route.params.subscribe(params => {\n      this.surveyId = params['surveyId'];\n      this.surveyToEdit = this.repository.getSurvey(this.surveyId);\n    });\n\n    this.surveyEditForm = this.fb.group({\n      title: this.surveyToEdit.title,\n      userId: this.surveyToEdit.userId,\n      expiration_dte: new FormControl(new Date(this.surveyToEdit.expiration_dte).toISOString().slice(0, -1)),\n      questions: this.fb.array([])\n    });\n\n    let questionsControl = <FormArray>this.surveyEditForm.controls.questions;\n    this.surveyToEdit.questions.forEach(question => {\n      questionsControl.push(this.fb.group({\n        text: question.text,\n        type: question.type,\n        answers: this.setAnswers(question.answers)\n      }))\n    });\n  }\n\n  questions(): FormArray {\n    return this.surveyEditForm.get(\"questions\") as FormArray\n  }\n\n  answers(qIndex: number): FormArray {\n    return this.questions().at(qIndex).get(\"answers\") as FormArray\n  }\n\n  setAnswers(data) {\n    let answersArr = new FormArray([])\n    data.forEach(a => {\n      answersArr.push(this.fb.group({\n        text: a.text,\n        isCorrect: a.isCorrect\n      }))\n    })\n    return answersArr;\n  }\n\n  ngOnInit(): void { }\n\n  surveyList(): void {\n    this.router.navigateByUrl('/surveys/list');\n  }\n\n  onSubmit(): void {\n    console.log(this.surveyEditForm.value);\n    this.repository.updateSurvey(this.surveyId, this.surveyEditForm.value).subscribe(data => {\n      if (data.success) {\n\n        Swal.fire(\n          'Survey Update',\n          'The survey has been updated successfully',\n          'success'\n        );\n\n        this.router.navigate(['/surveys/list'])\n          .then(() => {\n            window.location.reload();\n          });\n      } else {\n        Swal.fire(\n          'Survey Update',\n          'An error ocurred while updating survey. Please try again later.',\n          'error'\n        );\n      }\n    });\n  }\n\n}\n","<div class=\"container \">\n    <div class=\"surveyEditFormContainer\" *ngIf=\"surveyToEdit\">\n        <div class=\"col-md-offset-3 col-md-10 section-title\">\n            <h1 class=\"display-4\">Edit Survey</h1>\n        </div>\n        <form class=\"surveyEditForm\" novalidate class=\"m-2\" (ngSubmit)='onSubmit()' [formGroup]=\"surveyEditForm\">\n            <input type=\"hidden\" name=\"userId\" formControlName=\"userId\">\n            <div class=\"form-group\">\n                <label for=\"title\">Title</label>\n                <input class=\"form-control\" name='title' formControlName=\"title\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"Expiration Date\">Expiration Date</label>\n                <input class=\"form-control\" type=\"datetime-local\" name=\"expiration_dte\" formControlName=\"expiration_dte\" required>\n            </div>\n            <table class=\"table\" formArrayName=\"questions\">\n                <tr>\n                    <th colspan=\"2\">Questions: </th>\n                </tr>\n                <tr *ngFor=\"let question of questions().controls; let qIndex=index\" [formGroupName]=\"qIndex\">\n                    <td>\n                        Text :\n                        <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                    </td>\n                    <td>\n                        Type:\n                        <input type=\"text\" formControlName=\"type\" class=\"form-control\" disabled>\n                    </td>\n                    <td>\n                        <div formArrayName=\"answers\">\n                            <div *ngFor=\"let answer of answers(qIndex).controls; let aIndex=index\">\n                                <div [formGroupName]=\"aIndex\">\n                                    Answer :\n                                    <input type=\"text\" formControlName=\"text\" class=\"form-control\">\n                                    <div class=\"form-check form-switch\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"isCorrect\">\n                                        <label class=\"form-check-label\" for=\"isCorrect\">Is Answer correct?</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n            <div class=\"text-left\">\n                <button class=\"btn btn-secondary m-1\" (click)='surveyList()'>Back</button>\n                <button class=\"btn btn-primary m-1\" type=\"submit\">Update Survey</button>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BasePageComponent } from './base-page/base-page.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, FormsModule, RouterModule],\r\n  declarations: [\r\n    BasePageComponent,\r\n    FooterComponent,\r\n    HeaderComponent\r\n  ],\r\n  exports: [\r\n    BasePageComponent,\r\n    FooterComponent,\r\n    HeaderComponent\r\n    ]\r\n})\r\nexport class PartialsModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent extends BasePageComponent implements OnInit {\n\n  constructor(route: ActivatedRoute) {\n    super(route);\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-base-page></app-base-page>\n","import { Component, OnInit } from '@angular/core';\nimport { SurveyRepository } from '../../model/survey.repository';\nimport { Survey } from '../../model/survey.model';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-available',\n  templateUrl: './available.component.html',\n  styleUrls: ['./available.component.css']\n})\nexport class AvailableComponent {\n\n  constructor(private router: Router, private repository: SurveyRepository) { }\n\n  get surveys(): Survey[] {\n    return this.repository.getSurveys();\n  }\n\n  get availableSurveys(): Survey[] {\n    return this.repository.getAvailableSurveys();\n  }\n\n  updateQuiz(surveyId: string): void {\n    this.router.navigate(['/surveys/update/', surveyId]);\n  }\n\n  removeQuiz(surveyId: string): void {\n\n    Swal.fire({\n      title: 'Are you sure to delete the survey?',\n      text: \"The survey will be deleted permanently\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Delete survey'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.repository.removeSurvey(surveyId)\n          .subscribe(\n            response => {\n              window.location.reload();\n            },\n            error => {\n              console.log(error);\n            });\n      }\n    });\n  }\n}\n","<div class=\"container availableListContainer\">\n    <div class=\"row\">\n        <div class=\"col-md-offset-3 col-md-10\">\n            <h1 class=\"display-4\">Available Surveys</h1>\n            <!-- Surveys -->\n            <div class=\"col-10 p-2\">\n                <div *ngFor='let survey of availableSurveys' class=\"card m-1 p-1 bg-light transparent85\">\n                    <h4>\n                        {{ survey.title }}\n                        <span class=\"badge badge-pill badge-secondary float-right\">\n                        Creator: <span class=\"badge badge-light\">{{ survey.userId }}</span>\n                        </span>\n                    </h4>\n                    <div class=\"card-text bg-white p-1\">\n                        <span class=\"col-2\"><b>#Questions:</b> {{survey.questions.length}}</span>\n                        <b>Expires on: </b>{{ survey.expiration_dte | date:'yyyy-MM-dd hh:mm a'}}\n                        <button class=\"btn btn-success btn-sm float-right\" routerLink='/surveys/respond/{{survey._id}}'>\n                            Start Survey\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Survey } from './survey.model';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SurveyRepository {\r\n  private surveys: Survey[] = [];\r\n\r\n  constructor(private dataSource: RestDataSource) {\r\n    dataSource.getSurveys().subscribe(data => {\r\n      this.surveys = data;\r\n    });\r\n  }\r\n\r\n  getSurveys(): Survey[] {\r\n    return this.surveys;\r\n  }\r\n\r\n  getSurvey(id: string): Survey {\r\n    return this.surveys.find(s => s._id === id);\r\n  }\r\n\r\n  getSurveyById(id: string): Observable<Survey> {\r\n    return this.dataSource.getSurveyById(id);\r\n  }\r\n\r\n  getAvailableSurveys(): Survey[] {\r\n    const currentDate = new Date();\r\n    return this.surveys.filter(s => new Date(s.expiration_dte) >= currentDate);\r\n  }\r\n\r\n  getSurveysByUserName(username: string): Survey[] {\r\n    return this.surveys.filter(s => s.userId === username);\r\n  }\r\n\r\n  createSurvey(survey: Survey): Observable<any> {\r\n    return this.dataSource.createSurvey(survey);\r\n  }\r\n\r\n  answerSurvey(response: any, surveyId: string): Observable<any> {\r\n    return this.dataSource.answerSurvey(response, surveyId);\r\n  }\r\n\r\n  updateSurvey(id: string, survey: Survey): Observable<any> {\r\n    return this.dataSource.updateSurvey(id, survey);\r\n  }\r\n\r\n  removeSurvey(id: string): Observable<Survey> {\r\n    return this.dataSource.deleteSurvey(id);\r\n  }\r\n\r\n  getUserCreatedSurveys(userId: string): Observable<any> {\r\n    return this.dataSource.getUserCreatedSurveys(userId);\r\n  }\r\n\r\n  getUserCreatedSurveysAnswers(userId: string): Observable<any> {\r\n    return this.dataSource.getUserCreatedSurveysAnswers(userId);\r\n  }\r\n\r\n  getSurveysCorrectAnswersForCreator(userId: string): Observable<any> {\r\n    return this.dataSource.getSurveysCorrectAnswersForCreator(userId);\r\n  }\r\n\r\n  getSurveysTotalAnswersForCreator(userId: string): Observable<any> {\r\n    return this.dataSource.getSurveysTotaltAnswersForCreator(userId);\r\n  }\r\n\r\n  getGeneralGenderStats(userId: string): Observable<any> {\r\n    return this.dataSource.getGeneralGenderStats(userId);\r\n  }\r\n\r\n  getGeneralAgeStats(userId: string): Observable<any> {\r\n    return this.dataSource.getGeneralAgeStats(userId);\r\n  }\r\n\r\n  getSurveysAnsweredPerSurvey(surveyId: string): Observable<any>{\r\n    return this.dataSource.getSurveysAnsweredPerSurvey(surveyId);\r\n  }\r\n\r\n  getSurveysCorrectAnswersForSurvey(surveyId: string): Observable<any>{\r\n    return this.dataSource.getSurveysCorrectAnswersForSurvey(surveyId);\r\n  }\r\n\r\n  getGenderStatsBySurvey(surveyId: string): Observable<any>{\r\n    return this.dataSource.getGenderStatsBySurvey(surveyId);\r\n  }\r\n\r\n  getAgeStatsBySurvey(surveyId: string): Observable<any>{\r\n    return this.dataSource.getAgeStatsBySurvey(surveyId);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { AvailableComponent } from './survey-mngmt/available/available.component';\nimport { CreateComponent } from './survey-mngmt/create/create.component';\nimport { ListComponent } from './survey-mngmt/list/list.component';\nimport { StatsComponent } from './survey-mngmt/stats/stats.component';\nimport { UpdateComponent } from './survey-mngmt/update/update.component';\nimport { RegisterComponent } from './survey-mngmt/register/register.component';\nimport { RespondComponent } from './survey-mngmt/respond/respond.component';\nimport { AccountComponent } from './survey-mngmt/account/account.component';\nimport { AuthComponent } from './survey-mngmt/auth/auth.component';\nimport { StoreFirstGuard } from './guards/storeFirstGuard.guard';\nimport { AuthGuard } from './survey-mngmt/auth/auth.guard';\n\nconst routes: Routes = [\n {path: 'home', component: HomeComponent, data: {title: 'Survey Builder'}},\n {path: 'about', component: AboutComponent, data: {title: 'About'}},\n { path: 'surveys/available', component: AvailableComponent },\n { path: 'surveys/list', component: ListComponent,canActivate: [AuthGuard] },\n { path: 'surveys/create', component: CreateComponent,canActivate: [AuthGuard] },\n { path: 'surveys/update/:surveyId', component: UpdateComponent,canActivate: [AuthGuard] },\n { path: 'surveys/respond/:surveyId', component: RespondComponent},\n { path: 'surveys/stats', component: StatsComponent ,canActivate: [AuthGuard]},\n { path: 'surveys/stats/:surveyId', component: StatsComponent ,canActivate: [AuthGuard]},\n { path: 'login', component: AuthComponent },\n { path: 'account/:userId', component: AccountComponent, canActivate: [AuthGuard]},\n { path: 'register', component: RegisterComponent },\n {path: '', redirectTo: '/home', pathMatch: 'full'},\n {path: '**', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule],\n  providers: [StoreFirstGuard ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}